// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tunnel.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dolittle.Runtime.Events.Relativity {

  /// <summary>Holder for reflection information generated from tunnel.proto</summary>
  public static partial class TunnelReflection {

    #region Descriptor
    /// <summary>File descriptor for tunnel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TunnelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgx0dW5uZWwucHJvdG8SCnJlbGF0aXZpdHkiQQogRXZlbnRQYXJ0aWNsZVN1",
            "YnNjcmlwdGlvbk1lc3NhZ2USDQoFZXZlbnQYASABKAkSDgoGb2Zmc2V0GAIg",
            "ASgDIooBChFPcGVuVHVubmVsTWVzc2FnZRITCgthcHBsaWNhdGlvbhgBIAEo",
            "CRIbChNhcHBsaWNhdGlvbkxvY2F0aW9uGAIgAygJEkMKDXN1YnNjcmlwdGlv",
            "bnMYAyADKAsyLC5yZWxhdGl2aXR5LkV2ZW50UGFydGljbGVTdWJzY3JpcHRp",
            "b25NZXNzYWdlIlMKFEV2ZW50UGFydGljbGVNZXNzYWdlEgoKAmlkGAEgASgM",
            "EhAKCG1ldGFkYXRhGAIgASgMEg0KBWV2ZW50GAMgASgMEg4KBmNvbW1pdBgE",
            "IAEoAzJjChRRdWFudHVtVHVubmVsU2VydmljZRJLCgRPcGVuEh0ucmVsYXRp",
            "dml0eS5PcGVuVHVubmVsTWVzc2FnZRogLnJlbGF0aXZpdHkuRXZlbnRQYXJ0",
            "aWNsZU1lc3NhZ2UiADABQiWqAiJEb2xpdHRsZS5SdW50aW1lLkV2ZW50cy5S",
            "ZWxhdGl2aXR5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage), global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage.Parser, new[]{ "Event", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dolittle.Runtime.Events.Relativity.OpenTunnelMessage), global::Dolittle.Runtime.Events.Relativity.OpenTunnelMessage.Parser, new[]{ "Application", "ApplicationLocation", "Subscriptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dolittle.Runtime.Events.Relativity.EventParticleMessage), global::Dolittle.Runtime.Events.Relativity.EventParticleMessage.Parser, new[]{ "Id", "Metadata", "Event", "Commit" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EventParticleSubscriptionMessage : pb::IMessage<EventParticleSubscriptionMessage> {
    private static readonly pb::MessageParser<EventParticleSubscriptionMessage> _parser = new pb::MessageParser<EventParticleSubscriptionMessage>(() => new EventParticleSubscriptionMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventParticleSubscriptionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dolittle.Runtime.Events.Relativity.TunnelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventParticleSubscriptionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventParticleSubscriptionMessage(EventParticleSubscriptionMessage other) : this() {
      event_ = other.event_;
      offset_ = other.offset_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventParticleSubscriptionMessage Clone() {
      return new EventParticleSubscriptionMessage(this);
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 1;
    private string event_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Event {
      get { return event_; }
      set {
        event_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventParticleSubscriptionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventParticleSubscriptionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Event != other.Event) return false;
      if (Offset != other.Offset) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Event.Length != 0) hash ^= Event.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Event.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Event);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Event.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Event);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventParticleSubscriptionMessage other) {
      if (other == null) {
        return;
      }
      if (other.Event.Length != 0) {
        Event = other.Event;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Event = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenTunnelMessage : pb::IMessage<OpenTunnelMessage> {
    private static readonly pb::MessageParser<OpenTunnelMessage> _parser = new pb::MessageParser<OpenTunnelMessage>(() => new OpenTunnelMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenTunnelMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dolittle.Runtime.Events.Relativity.TunnelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTunnelMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTunnelMessage(OpenTunnelMessage other) : this() {
      application_ = other.application_;
      applicationLocation_ = other.applicationLocation_.Clone();
      subscriptions_ = other.subscriptions_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTunnelMessage Clone() {
      return new OpenTunnelMessage(this);
    }

    /// <summary>Field number for the "application" field.</summary>
    public const int ApplicationFieldNumber = 1;
    private string application_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Application {
      get { return application_; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "applicationLocation" field.</summary>
    public const int ApplicationLocationFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_applicationLocation_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> applicationLocation_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ApplicationLocation {
      get { return applicationLocation_; }
    }

    /// <summary>Field number for the "subscriptions" field.</summary>
    public const int SubscriptionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage> _repeated_subscriptions_codec
        = pb::FieldCodec.ForMessage(26, global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage.Parser);
    private readonly pbc::RepeatedField<global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage> subscriptions_ = new pbc::RepeatedField<global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dolittle.Runtime.Events.Relativity.EventParticleSubscriptionMessage> Subscriptions {
      get { return subscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenTunnelMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenTunnelMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Application != other.Application) return false;
      if(!applicationLocation_.Equals(other.applicationLocation_)) return false;
      if(!subscriptions_.Equals(other.subscriptions_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Application.Length != 0) hash ^= Application.GetHashCode();
      hash ^= applicationLocation_.GetHashCode();
      hash ^= subscriptions_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Application.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Application);
      }
      applicationLocation_.WriteTo(output, _repeated_applicationLocation_codec);
      subscriptions_.WriteTo(output, _repeated_subscriptions_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Application.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Application);
      }
      size += applicationLocation_.CalculateSize(_repeated_applicationLocation_codec);
      size += subscriptions_.CalculateSize(_repeated_subscriptions_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenTunnelMessage other) {
      if (other == null) {
        return;
      }
      if (other.Application.Length != 0) {
        Application = other.Application;
      }
      applicationLocation_.Add(other.applicationLocation_);
      subscriptions_.Add(other.subscriptions_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Application = input.ReadString();
            break;
          }
          case 18: {
            applicationLocation_.AddEntriesFrom(input, _repeated_applicationLocation_codec);
            break;
          }
          case 26: {
            subscriptions_.AddEntriesFrom(input, _repeated_subscriptions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventParticleMessage : pb::IMessage<EventParticleMessage> {
    private static readonly pb::MessageParser<EventParticleMessage> _parser = new pb::MessageParser<EventParticleMessage>(() => new EventParticleMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventParticleMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dolittle.Runtime.Events.Relativity.TunnelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventParticleMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventParticleMessage(EventParticleMessage other) : this() {
      id_ = other.id_;
      metadata_ = other.metadata_;
      event_ = other.event_;
      commit_ = other.commit_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventParticleMessage Clone() {
      return new EventParticleMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private pb::ByteString id_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 2;
    private pb::ByteString metadata_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    private pb::ByteString event_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Event {
      get { return event_; }
      set {
        event_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commit" field.</summary>
    public const int CommitFieldNumber = 4;
    private long commit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Commit {
      get { return commit_; }
      set {
        commit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventParticleMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventParticleMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Metadata != other.Metadata) return false;
      if (Event != other.Event) return false;
      if (Commit != other.Commit) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (Event.Length != 0) hash ^= Event.GetHashCode();
      if (Commit != 0L) hash ^= Commit.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Metadata);
      }
      if (Event.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Event);
      }
      if (Commit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Commit);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metadata);
      }
      if (Event.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Event);
      }
      if (Commit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Commit);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventParticleMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      if (other.Event.Length != 0) {
        Event = other.Event;
      }
      if (other.Commit != 0L) {
        Commit = other.Commit;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 18: {
            Metadata = input.ReadBytes();
            break;
          }
          case 26: {
            Event = input.ReadBytes();
            break;
          }
          case 32: {
            Commit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
